name: Release

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  version-bump:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump.outputs.new_version }}
      new_tag: ${{ steps.bump.outputs.new_tag }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Get current version
      id: get_version
      run: |
        # Get version from Chart.yaml
        CURRENT_VERSION=$(grep '^version:' charts/netbird-api-exporter/Chart.yaml | awk '{print $2}')
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

    - name: Bump version
      id: bump
      run: |
        CURRENT_VERSION="${{ steps.get_version.outputs.current_version }}"
        # Simple semantic versioning - increment patch version
        IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}
        NEW_PATCH=$((PATCH + 1))
        NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
        NEW_TAG="v$NEW_VERSION"
        
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
        
        # Update Chart.yaml
        sed -i "s/^version: .*/version: $NEW_VERSION/" charts/netbird-api-exporter/Chart.yaml
        sed -i "s/^appVersion: .*/appVersion: \"$NEW_VERSION\"/" charts/netbird-api-exporter/Chart.yaml
        
        # Commit version bump
        git add charts/netbird-api-exporter/Chart.yaml
        git commit -m "chore: bump version to $NEW_VERSION [skip ci]"
        git tag $NEW_TAG
        git push origin main
        git push origin $NEW_TAG

  build-and-push-docker:
    needs: version-bump
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest
          type=raw,value=${{ needs.version-bump.outputs.new_version }}
          type=raw,value=${{ needs.version-bump.outputs.new_tag }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-and-push-helm:
    needs: version-bump
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: '3.12.0'

    - name: Configure Helm for OCI
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ${{ env.REGISTRY }} --username ${{ github.actor }} --password-stdin

    - name: Package Helm chart
      run: |
        helm package charts/netbird-api-exporter --version ${{ needs.version-bump.outputs.new_version }}

    - name: Push Helm chart to OCI registry
      run: |
        helm push netbird-api-exporter-${{ needs.version-bump.outputs.new_version }}.tgz oci://${{ env.REGISTRY }}/${{ github.repository }}/charts

  create-release:
    needs: [version-bump, build-and-push-docker, build-and-push-helm]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.version-bump.outputs.new_tag }}
        release_name: Release ${{ needs.version-bump.outputs.new_tag }}
        body: |
          ## Release ${{ needs.version-bump.outputs.new_tag }}
          
          ### Changes
          - Docker image: `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.version-bump.outputs.new_version }}`
          - Helm chart: `oci://${{ env.REGISTRY }}/${{ github.repository }}/charts/netbird-api-exporter:${{ needs.version-bump.outputs.new_version }}`
          
          ### Installation
          
          #### Docker
          ```bash
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.version-bump.outputs.new_version }}
          ```
          
          #### Helm
          ```bash
          helm install netbird-api-exporter oci://${{ env.REGISTRY }}/${{ github.repository }}/charts/netbird-api-exporter --version ${{ needs.version-bump.outputs.new_version }}
          ```
        draft: false
        prerelease: false 