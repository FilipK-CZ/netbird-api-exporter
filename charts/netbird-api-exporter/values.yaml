# Default values for netbird-api-exporter.
replicaCount: 1

image:
  repository: netbird-api-exporter
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# NetBird API configuration
netbird:
  # NetBird API URL
  apiUrl: "https://api.netbird.io"
  # NetBird API token - will be stored in a secret
  # You should set this via --set or create the secret manually
  apiToken: ""

# External Secret configuration
externalSecret:
  # Enable External Secret Operator integration
  enabled: false
  # Secret Store reference
  secretStoreRef:
    name: ""
    kind: SecretStore  # or ClusterSecretStore
  # Target secret name (optional, defaults to the same as regular secret)
  secretName: ""
  # Remote references for the external secret
  data: []
    # Example:
    # - secretKey: netbird-api-token
    #   remoteRef:
    #     key: netbird/api-token
    #     property: token  # optional, if the secret contains multiple properties
  # Refresh interval for the external secret
  refreshInterval: "1h"
  # Additional annotations for the ExternalSecret resource
  annotations: {}
  # Additional labels for the ExternalSecret resource
  labels: {}

# Application configuration
config:
  # Address and port to listen on
  listenAddress: ":8080"
  # Path where metrics are exposed
  metricsPath: "/metrics"
  # Log level (debug, info, warn, error)
  logLevel: "info"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 65534
  runAsNonRoot: true
  runAsUser: 65534

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
  annotations: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: netbird-api-exporter.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: netbird-api-exporter-tls
  #    hosts:
  #      - netbird-api-exporter.local

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Prometheus monitoring
serviceMonitor:
  enabled: false
  # Additional labels for ServiceMonitor
  additionalLabels: {}
  # Scrape interval
  interval: 30s
  # Scrape timeout
  scrapeTimeout: 10s
  # Metric relabeling
  metricRelabelings: []
  # Target labels
  targetLabels: []
  # Sample limit
  sampleLimit: 0

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# Additional environment variables
extraEnvVars: []
# - name: CUSTOM_VAR
#   value: "custom_value"

# Additional environment variables from secrets/configmaps
extraEnvVarsSecret: ""
extraEnvVarsConfigMap: ""

# Additional volumes
extraVolumes: []

# Additional volume mounts
extraVolumeMounts: []

# Pod labels
podLabels: {}

# Deployment strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1 