apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "netbird-api-exporter.fullname" . }}
  labels:
    {{- include "netbird-api-exporter.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "netbird-api-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "netbird-api-exporter.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "netbird-api-exporter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "netbird-api-exporter.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NETBIRD_API_URL
              value: {{ .Values.netbird.apiUrl | quote }}
            {{- if .Values.netbird.apiToken }}
            - name: NETBIRD_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "netbird-api-exporter.secretName" . }}
                  key: netbird-api-token
            {{- end }}
            - name: LISTEN_ADDRESS
              value: {{ .Values.config.listenAddress | quote }}
            - name: METRICS_PATH
              value: {{ .Values.config.metricsPath | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.config.logLevel | quote }}
            {{- if .Values.extraEnvVarsSecret }}
            - name: EXTRA_ENV_VARS_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.extraEnvVarsSecret }}
                  key: extra-env-vars
            {{- end }}
            {{- if .Values.extraEnvVarsConfigMap }}
            - name: EXTRA_ENV_VARS_CONFIGMAP
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.extraEnvVarsConfigMap }}
                  key: extra-env-vars
            {{- end }}
            {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }} 